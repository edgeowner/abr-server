<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmatrix.abr.infrastructure.dao.RobotDetailMapper">
    <resultMap id="BaseResultMap" type="com.atmatrix.abr.infrastructure.entity.RobotDetail">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="robot_name" jdbcType="VARCHAR" property="robotName"/>
        <result column="robot_union_code" jdbcType="BIGINT" property="robotUnionCode"/>
        <result column="region_code" jdbcType="VARCHAR" property="regionCode"/>
        <result column="region_name" jdbcType="VARCHAR" property="regionName"/>
        <result column="billing_type" jdbcType="VARCHAR" property="billingType"/>
        <result column="billing_price" jdbcType="INTEGER" property="billingPrice"/>
        <result column="rent_status" jdbcType="VARCHAR" property="rentStatus"/>
        <result column="work_type" jdbcType="VARCHAR" property="workType"/>
        <result column="overdraft" jdbcType="INTEGER" property="overdraft"/>
        <result column="delete" jdbcType="INTEGER" property="delete"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `id`,
        `robot_name`,
        `robot_union_code`,
        `region_code`,
        `region_name`,
        `billing_type`,
        `billing_price`,
        `rent_status`,
        `work_type`,
        `overdraft`,
        `delete`,
        `create_time`,
        `update_time`
    </sql>
    <select id="selectByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotDetailExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from robot_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotDetailExample">
        delete from robot_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.atmatrix.abr.infrastructure.entity.RobotDetail">
    insert into robot_detail (
      robot_name,
      robot_union_code,
      region_code,
      region_name,
      billing_type,
      billing_price,
      rent_status,
      work_type,
      overdraft,
      delete,
      create_time,
      update_time
      )
    values (
      #{robotName,jdbcType=VARCHAR},
      #{robotUnionCode,jdbcType=BIGINT},
      #{regionCode,jdbcType=VARCHAR},
      #{regionName,jdbcType=VARCHAR},
      #{billingType,jdbcType=VARCHAR},
      #{billingPrice,jdbcType=INTEGER},
      #{rentStatus,jdbcType=VARCHAR},
      #{workType,jdbcType=VARCHAR},
      #{overdraft,jdbcType=INTEGER},
      #{delete,jdbcType=INTEGER},
      now(),
      now()
      )
  </insert>
    <insert id="insertSelective" parameterType="com.atmatrix.abr.infrastructure.entity.RobotDetail">
        insert into robot_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>

            <if test="robotName != null">
                robot_name,
            </if>
            <if test="robotUnionCode != null">
                robot_union_code,
            </if>
            <if test="regionCode != null">
                region_code,
            </if>
            <if test="regionName != null">
                region_name,
            </if>
            <if test="billingType != null">
                billing_type,
            </if>
            <if test="billingPrice != null">
                billing_price,
            </if>
            <if test="rentStatus != null">
                rent_status,
            </if>
            <if test="workType != null">
                work_type,
            </if>
            <if test="overdraft != null">
                overdraft,
            </if>
            <if test="delete != null">
                `delete`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>

            <if test="robotName != null">
                #{robotName,jdbcType=VARCHAR},
            </if>
            <if test="robotUnionCode != null">
                #{robotUnionCode,jdbcType=BIGINT},
            </if>
            <if test="regionCode != null">
                #{regionCode,jdbcType=VARCHAR},
            </if>
            <if test="regionName != null">
                #{regionName,jdbcType=VARCHAR},
            </if>
            <if test="billingType != null">
                #{billingType,jdbcType=VARCHAR},
            </if>
            <if test="billingPrice != null">
                #{billingPrice,jdbcType=INTEGER},
            </if>
            <if test="rentStatus != null">
                #{rentStatus,jdbcType=VARCHAR},
            </if>
            <if test="workType != null">
                #{workType,jdbcType=VARCHAR},
            </if>
            <if test="overdraft != null">
                #{overdraft,jdbcType=INTEGER},
            </if>
            <if test="delete != null">
                #{delete,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotDetailExample"
            resultType="java.lang.Long">
        select count(*) from robot_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update robot_detail
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>

            <if test="record.robotName != null">
                robot_name = #{record.robotName,jdbcType=VARCHAR},
            </if>
            <if test="record.robotUnionCode != null">
                robot_union_code = #{record.robotUnionCode,jdbcType=BIGINT},
            </if>
            <if test="record.regionCode != null">
                region_code = #{record.regionCode,jdbcType=VARCHAR},
            </if>
            <if test="record.regionName != null">
                region_name = #{record.regionName,jdbcType=VARCHAR},
            </if>
            <if test="record.billingType != null">
                billing_type = #{record.billingType,jdbcType=VARCHAR},
            </if>
            <if test="record.billingPrice != null">
                billing_price = #{record.billingPrice,jdbcType=INTEGER},
            </if>
            <if test="record.rentStatus != null">
                rent_status = #{record.rentStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.workType != null">
                work_type = #{record.workType,jdbcType=VARCHAR},
            </if>
            <if test="record.overdraft != null">
                overdraft = #{record.overdraft,jdbcType=INTEGER},
            </if>
            <if test="record.delete != null">
                delete = #{record.delete,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByExample" parameterType="map">
        update robot_detail
        set `id` = #{record.id,jdbcType=INTEGER},
        `robot_name` = #{record.robotName,jdbcType=VARCHAR},
        `robot_union_code` = #{record.robotUnionCode,jdbcType=BIGINT},
        `region_code` = #{record.regionCode,jdbcType=VARCHAR},
        `region_name` = #{record.regionName,jdbcType=VARCHAR},
        `billing_type` = #{record.billingType,jdbcType=VARCHAR},
        `billing_price` = #{record.billingPrice,jdbcType=INTEGER},
        `rent_status` = #{record.rentStatus,jdbcType=VARCHAR},
        `work_type` = #{record.workType,jdbcType=VARCHAR},
        `delete` = #{record.delete,jdbcType=INTEGER},
        `overdraft` = #{record.overdraft,jdbcType=INTEGER},
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
        `update_time` = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>




</mapper>