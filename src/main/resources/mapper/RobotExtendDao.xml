<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmatrix.abr.infrastructure.dao.RobotExtendDao">

    <sql id="Join_Table_List">
        rd.`id` as id,
        rd.`robot_name` as robotName,
        rd.`robot_union_code` as robotUnionCode,
        rd.`region_code` as regionCode,
        rd.`region_name` as regionName,
        rd.`billing_type` as billingType,
        rd.`billing_price` as billingPrice,
        rd.`rent_status_code` as rentStatusCode,
        rd.`work_type` as workType,
        rd.`delete` as `delete`,
        rd.`create_time` as createTime,
        rd.`update_time` as updateTime,
        rw.`pic_url` as picUrl,
        rw.`worktype_name` as workTypeName,
        rw.`worktype_desc` as worktypeDesc,
        rds.`name` as rentStatusCodeName,
        rdi.`name` as billingTypeName,
        rdu.`name` as unit
    </sql>

    <select id="queryListByPageCondition" resultType="com.atmatrix.abr.mgt.dto.RobotDetailDto">
        select
        <include refid="Join_Table_List"/>
        from robot_detail as rd
        left join work_type as rw on rw.union_code = rd.work_type
        left join robot_basic as rb on rb.union_code = rd.robot_union_code
        left join robot_dictionary as rdi on rdi.code = rd.billing_type and rdi.type = 'billing'
        left join robot_dictionary as rds on rds.code = rd.rent_status_code and rds.type = 'rentStatusCode'
        left join robot_dictionary as rdu on rdu.`parent_code` = rd.`billing_type` and rdu.`type` = 'unit'
        WHERE rd.`delete` = 1
        <if test="conditions !=null">
            <if test="conditions.regionCode !=null and conditions.regionCode !=''">
                <choose>
                    <when test="conditions.like">
                        and rd.region_code like concat(#{conditions.regionCode},',%')
                    </when>
                    <otherwise>
                        and rd.region_code = #{conditions.regionCode}
                    </otherwise>
                </choose>
            </if>
        </if>
        <if test="conditions.billingTypeCode !=null and conditions.billingTypeCode !=''">
            and rd.`billing_type` = #{conditions.billingTypeCode}
        </if>
        <if test="conditions.min !=null and conditions.min !=''">
            and rd.`billing_price` &gt;= #{conditions.min}
        </if>
        <if test="conditions.max !=null and conditions.max !=''">
            and rd.`billing_price` &lt; #{conditions.max}
        </if>
        <if test="conditions.rentStatusCode !=null and conditions.rentStatusCode !=''">
            and rd.`rent_status_code` = #{conditions.rentStatusCode}
        </if>
        <if test="conditions.workTypes !=null and conditions.workTypes.size() &gt; 0">
            and rd.work_type in
            <foreach close=")" collection="conditions.workTypes" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
        order by id desc
    </select>


    <sql id="Detail_Info_Extend">
        rd.`id` as id,
        rb.`union_code` as robotUnionCode,
        rb.`device_id`  as  deviceId,
        rb.`account_address` as accountAddress,
        rb.`robot_pic_url` as picUrl,
        rd.`robot_name` as name,
        rd.`region_code` as regionCode,
        rd.`rent_status_code` as rentStatusCode,
        rd.`billing_type`  as billingTypeCode,
        rd.`billing_price` as billingPrice,
        rd.`work_type` as workTypeCode,
        rd.`overdraft` as overdraft,
        rw.`worktype_name` as workTypeName,
        rw.`worktype_desc` as workTypeDesc,
        rdr.`name` as rentStatusName,
        rdb.`name` as billingTypeName,
        rdu.`name` as unit
    </sql>

    <select id="queryDetailInfoByUnionCode" resultType="com.atmatrix.abr.mgt.dto.RobotDetailExtendDto">
        select
        <include refid="Detail_Info_Extend"/>
        from robot_detail as rd
        left join robot_basic as rb on rb.`union_code` = rd.`robot_union_code`
        left join robot_dictionary as rdb on rdb.`code` = rd.`billing_type` and rdb.`type` = 'billing'
        left join robot_dictionary as rdr on rdr.`code` = rd.`rent_status_code` and rdr.`type` = 'rentStatus'
        left join robot_dictionary as rdu on rdu.`parent_code` = rd.`billing_type` and rdu.`type` = 'unit'
        left join work_type as rw on rw.`union_code` = rd.`work_type` and rw.`delete` = 1
        where rd.`robot_union_code` = #{robotUnionCode}
        and rd.`delete` = 1
    </select>

    <sql id="Detail_Info_Columns">
        rd.`id` as id ,
        rd.`robot_name` as robotName ,
        rd.`robot_union_code` as robotUnionCode,
        rd.`region_code` as regionCode,
        rd.`region_name` as regionName,
        rd.`billing_type` as billingType,
        rd.`billing_price`as billingPrice,
        rd.`delete` as delete ,
        rd.`create_time` as createTime,
        rd.`update_time` as updateTime,
        rdu.`name` as unit
        rdu.`code` as unitCode
    </sql>
    <select id="queryOneByUnionCode" resultType="com.atmatrix.abr.mgt.dto.RobotDetailDto">
        select
        <include refid="Detail_Info_Columns"/>
        from robot_detail as rd
        left join robot_dictionary as rdu on rdu.`parent_code` = rd.`billing_type` and rdu.`type` = 'unit'
        where rd.`robot_union_code` = #{unionCode}
        and rd.`delete` = 1
        limit 1
    </select>
    
    <select id="countRentRobotGroupByWorkType" resultType="java.util.HashMap">
        select `work_type` as workType, count(1) as amount
        from robot_detail
        where `rent_status_code` = #{rentStatusCode}
        and `delete` = 1
        group by `work_type`
    </select>
</mapper>