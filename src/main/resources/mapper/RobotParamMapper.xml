<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmatrix.abr.infrastructure.dao.RobotParamMapper">
  <resultMap id="BaseResultMap" type="com.atmatrix.abr.infrastructure.entity.RobotParam">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="robot_union_code" jdbcType="VARCHAR" property="robotUnionCode" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="delete" jdbcType="INTEGER" property="delete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `robot_union_code`, `key`, `value`, `delete`, `create_time`, `update_time`
  </sql>
  <select id="selectByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotParamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from robot_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotParamExample">
    delete from robot_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atmatrix.abr.infrastructure.entity.RobotParam">
    insert into robot_param (id, robot_union_code, key, 
      value, delete, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{robotUnionCode,jdbcType=VARCHAR}, #{key,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{delete,jdbcType=INTEGER},
      now(),now())
  </insert>
  <insert id="insertSelective" parameterType="com.atmatrix.abr.infrastructure.entity.RobotParam">
    insert into robot_param
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="robotUnionCode != null">
        robot_union_code,
      </if>
      <if test="key != null">
        key,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="delete != null">
        delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="robotUnionCode != null">
        #{robotUnionCode,jdbcType=VARCHAR},
      </if>
      <if test="key != null">
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="delete != null">
        #{delete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotParamExample" resultType="java.lang.Long">
    select count(*) from robot_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update robot_param
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.robotUnionCode != null">
        robot_union_code = #{record.robotUnionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.key != null">
        key = #{record.key,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.delete != null">
        delete = #{record.delete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update robot_param
    set id = #{record.id,jdbcType=INTEGER},
      robot_union_code = #{record.robotUnionCode,jdbcType=VARCHAR},
      key = #{record.key,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR},
      delete = #{record.delete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>


  <select id="queryParamsByUnionCode" resultType="com.atmatrix.abr.infrastructure.entity.RobotParam">
    select <include refid="Base_Column_List"/>
    from robot_param
    where `delete` = 1
    and `robot_union_code` = #{robotUnionCode}
  </select>


  <insert id="batchInsert" useGeneratedKeys="true" keyProperty="id" parameterType="arraylist">
    insert into robot_param (
    `robot_union_code`,
    `key`,
    `value`,
    `create_time`,
    `update_time`
    ) values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.robotUnionCode,jdbcType=VARCHAR},
      #{item.key,jdbcType=VARCHAR},
      #{item.value,jdbcType=VARCHAR},
      now(),
      now()
      )
    </foreach>
  </insert>
</mapper>