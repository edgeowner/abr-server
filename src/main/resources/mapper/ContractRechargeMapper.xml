<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmatrix.abr.infrastructure.dao.ContractRechargeMapper">
    <resultMap id="BaseResultMap" type="com.atmatrix.abr.infrastructure.entity.ContractRecharge">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="union_code" jdbcType="VARCHAR" property="unionCode"/>
        <result column="account_address" jdbcType="VARCHAR" property="accountAddress"/>
        <result column="from_address" jdbcType="VARCHAR" property="fromAddress"/>
        <result column="billing_type" jdbcType="VARCHAR" property="billingType"/>
        <result column="amount" jdbcType="INTEGER" property="amount"/>
        <result column="unit_code" jdbcType="VARCHAR" property="unitCode"/>
        <result column="total_price" jdbcType="INTEGER" property="totalPrice"/>
        <result column="delete" jdbcType="INTEGER" property="delete"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, union_code, account_address, from_address, billing_type, amount, unit_code, total_price, `delete`, create_time, update_time
  </sql>
    <select id="selectByExample" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRechargeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from contract_recharge
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRechargeExample">
        delete from contract_recharge
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRecharge">
    insert into contract_recharge (
        `union_code`,
        `account_address`,
        `from_address`,
        `billing_type`,
        `amount`,
        `unit_code`,
        `total_price`,
        `delete`,
        `create_time`,
        `update_time`
    )
    values (
      #{unionCode,jdbcType=VARCHAR},
      #{accountAddress,jdbcType=VARCHAR},
      #{fromAddress,jdbcType=VARCHAR},
      #{billingType,jdbcType=VARCHAR},
      #{amount,jdbcType=INTEGER},
      #{unitCode,jdbcType=VARCHAR},
      #{totalPrice,jdbcType=INTEGER},
      #{delete,jdbcType=INTEGER},
      now(),
      now()
      )
  </insert>
    <insert id="insertSelective" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRecharge">
        insert into contract_recharge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="unionCode != null">
                union_code,
            </if>
            <if test="accountAddress != null">
                account_address,
            </if>
            <if test="fromAddress != null">
                from_address,
            </if>
            <if test="billingType != null">
                billing_type,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="unitCode != null">
                unit_code,
            </if>
            <if test="totalPrice != null">
                total_price,
            </if>
            <if test="delete != null">
                `delete`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="unionCode != null">
                #{unionCode,jdbcType=VARCHAR},
            </if>
            <if test="accountAddress != null">
                #{accountAddress,jdbcType=VARCHAR},
            </if>
            <if test="fromAddress != null">
                #{fromAddress,jdbcType=VARCHAR},
            </if>
            <if test="billingType != null">
                #{billingType,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=INTEGER},
            </if>
            <if test="unitCode != null">
                #{unitCode,jdbcType=VARCHAR},
            </if>
            <if test="totalPrice != null">
                #{totalPrice,jdbcType=INTEGER},
            </if>
            <if test="delete != null">
                #{delete,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRechargeExample"
            resultType="java.lang.Long">
        select count(*) from contract_recharge
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update contract_recharge
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.unionCode != null">
                union_code = #{record.unionCode,jdbcType=VARCHAR},
            </if>
            <if test="record.accountAddress != null">
                account_address = #{record.accountAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.fromAddress != null">
                from_address = #{record.fromAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.billingType != null">
                billing_type = #{record.billingType,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=INTEGER},
            </if>
            <if test="record.unitCode != null">
                unit_code = #{record.unitCode,jdbcType=VARCHAR},
            </if>
            <if test="record.totalPrice != null">
                total_price = #{record.totalPrice,jdbcType=INTEGER},
            </if>
            <if test="record.delete != null">
                `delete` = #{record.delete,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update contract_recharge
        set `id` = #{record.id,jdbcType=INTEGER},
        `account_address` = #{record.accountAddress,jdbcType=VARCHAR},
        `from_address` = #{record.fromAddress,jdbcType=VARCHAR},
        `union_code` = #{record.unionCode,jdbcType=VARCHAR},
        `billing_type` = #{record.billingType,jdbcType=VARCHAR},
        `amount` = #{record.amount,jdbcType=INTEGER},
        `unit_code` = #{record.unitCode,jdbcType=VARCHAR},
        `total_price` = #{record.totalPrice,jdbcType=INTEGER},
        `delete` = #{record.delete,jdbcType=INTEGER},
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
        `update_time` = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>