<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmatrix.abr.infrastructure.dao.ContractRentTimeMapper">
    <resultMap id="BaseResultMap" type="com.atmatrix.abr.infrastructure.entity.ContractRentTime">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="rent_union_code" jdbcType="VARCHAR" property="rentUnionCode"/>
        <result column="rent_start_time" jdbcType="TIMESTAMP" property="rentStartTime"/>
        <result column="rent_end_time" jdbcType="TIMESTAMP" property="rentEndTime"/>
        <result column="actual_end_time" jdbcType="TIMESTAMP" property="actualEndTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, rent_union_code, rent_start_time, rent_end_time, actual_end_time, create_time, 
    update_time
  </sql>
    <select id="selectByExample" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRentTimeExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from contract_rent_time
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRentTimeExample">
        delete from contract_rent_time
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRentTime">
    insert into contract_rent_time (
      rent_union_code,
      rent_start_time,
      rent_end_time,
      actual_end_time,
      create_time,
      update_time
      )
    values (
      #{rentUnionCode,jdbcType=VARCHAR},
      #{rentStartTime,jdbcType=TIMESTAMP},
      #{rentEndTime,jdbcType=TIMESTAMP},
      #{actualEndTime,jdbcType=TIMESTAMP},
      now(),
      now()
    )
  </insert>
    <insert id="insertSelective" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRentTime">
        insert into contract_rent_time
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="rentUnionCode != null">
                rent_union_code,
            </if>
            <if test="rentStartTime != null">
                rent_start_time,
            </if>
            <if test="rentEndTime != null">
                rent_end_time,
            </if>
            <if test="actualEndTime != null">
                actual_end_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="rentUnionCode != null">
                #{rentUnionCode,jdbcType=VARCHAR},
            </if>
            <if test="rentStartTime != null">
                #{rentStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="rentEndTime != null">
                #{rentEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="actualEndTime != null">
                #{actualEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
               now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.atmatrix.abr.infrastructure.entity.ContractRentTimeExample"
            resultType="java.lang.Long">
        select count(*) from contract_rent_time
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update contract_rent_time
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.rentUnionCode != null">
                rent_union_code = #{record.rentUnionCode,jdbcType=VARCHAR},
            </if>
            <if test="record.rentStartTime != null">
                rent_start_time = #{record.rentStartTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.rentEndTime != null">
                rent_end_time = #{record.rentEndTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.actualEndTime != null">
                actual_end_time = #{record.actualEndTime,jdbcType=TIMESTAMP},
            </if>

        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update contract_rent_time
        set id = #{record.id,jdbcType=INTEGER},
        rent_union_code = #{record.rentUnionCode,jdbcType=VARCHAR},
        rent_start_time = #{record.rentStartTime,jdbcType=TIMESTAMP},
        rent_end_time = #{record.rentEndTime,jdbcType=TIMESTAMP},
        actual_end_time = #{record.actualEndTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>