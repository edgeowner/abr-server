<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atmatrix.abr.infrastructure.dao.RobotWorktypeMapper">
  <resultMap id="BaseResultMap" type="com.atmatrix.abr.infrastructure.entity.RobotWorktype">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="worktype_name" jdbcType="VARCHAR" property="worktypeName" />
    <result column="union_code" jdbcType="VARCHAR" property="unionCode" />
    <result column="delete" jdbcType="INTEGER" property="delete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.atmatrix.abr.infrastructure.entity.RobotWorktypeWithBLOBs">
    <result column="worktype_desc" jdbcType="LONGVARCHAR" property="worktypeDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `worktype_name`, `union_code`,  `delete`, `create_time`, `update_time`
  </sql>
  <sql id="Blob_Column_List">
    `worktype_desc`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.atmatrix.abr.infrastructure.entity.RobotWorktypeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from robot_worktype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotWorktypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from robot_worktype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotWorktypeExample">
    delete from robot_worktype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atmatrix.abr.infrastructure.entity.RobotWorktypeWithBLOBs">
    insert into robot_worktype (id, worktype_name, union_code, 
       delete, create_time,
      update_time, worktype_desc)
    values (#{id,jdbcType=INTEGER}, #{worktypeName,jdbcType=VARCHAR}, #{unionCode,jdbcType=VARCHAR}, 
      #{delete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{worktypeDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.atmatrix.abr.infrastructure.entity.RobotWorktypeWithBLOBs">
    insert into robot_worktype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="worktypeName != null">
        worktype_name,
      </if>
      <if test="unionCode != null">
        union_code,
      </if>

      <if test="delete != null">
        delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="worktypeDesc != null">
        worktype_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="worktypeName != null">
        #{worktypeName,jdbcType=VARCHAR},
      </if>
      <if test="unionCode != null">
        #{unionCode,jdbcType=VARCHAR},
      </if>

      <if test="delete != null">
        #{delete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="worktypeDesc != null">
        #{worktypeDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atmatrix.abr.infrastructure.entity.RobotWorktypeExample" resultType="java.lang.Long">
    select count(*) from robot_worktype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update robot_worktype
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.worktypeName != null">
        worktype_name = #{record.worktypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.unionCode != null">
        union_code = #{record.unionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.delete != null">
        delete = #{record.delete,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.worktypeDesc != null">
        worktype_desc = #{record.worktypeDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update robot_worktype
    set id = #{record.id,jdbcType=INTEGER},
      worktype_name = #{record.worktypeName,jdbcType=VARCHAR},
      union_code = #{record.unionCode,jdbcType=VARCHAR},
      delete = #{record.delete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      worktype_desc = #{record.worktypeDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update robot_worktype
    set id = #{record.id,jdbcType=INTEGER},
      worktype_name = #{record.worktypeName,jdbcType=VARCHAR},
      union_code = #{record.unionCode,jdbcType=VARCHAR},
      delete = #{record.delete,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="getAll" resultType="com.atmatrix.abr.infrastructure.entity.RobotWorktype">
    select *
    from robot_worktype
  </select>

</mapper>